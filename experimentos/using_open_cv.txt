#
#include <stdio.h>
#
#include "cv.h"
#
#include "highgui.h"
#
 
#
IplImage* img0, * img1;
#
CvPoint   point;
#
int       drag = 0;
#
 
#
void
#
mouseHandler(int event, int x, int y, int flags, void* param)
#
{
#
    /* user press left button */
#
    if (event == CV_EVENT_LBUTTONDOWN && !drag)
#
    {
#
        point = cvPoint(x, y);
#
        drag  = 1;
#
    }
#
 
#
    /* user drag the mouse */
#
    if (event == CV_EVENT_MOUSEMOVE && drag)
#
    {
#
        img1 = cvClone(img0);
#
       
#
        cvRectangle(
#
            img1,
#
            point,
#
            cvPoint(x, y),
#
            CV_RGB(255, 0, 0),
#
            1, 8, 0
#
        );
#
       
#
        cvShowImage("img", img1);
#
    }
#
 
#
    /* user release left button */
#
    if (event == CV_EVENT_LBUTTONUP && drag)
#
    {
#
        img1 = cvClone(img0);
#
       
#
        cvSetImageROI(
#
            img1,
#
            cvRect(
#
                point.x,
#
                point.y,
#
                x - point.x,
#
                y - point.y
#
            )
#
        );
#
       
#
        cvNot(img1, img1);    // or do whatever with the ROI
#
       
#
        cvResetImageROI(img1);
#
        cvShowImage("img", img1);
#
        drag = 0;
#
    }
#
 
#
    /* user click right button: reset all */
#
    if (event == CV_EVENT_RBUTTONUP)
#
    {
#
        cvShowImage("img", img0);
#
        drag = 0;
#
    }
#
}
#
 
#
int
#
main(int argc, char** argv)
#
{
#
    if (argc != 2)
#
    {
#
        fprintf(stderr, "Usage: %s <image>\n", argv[0]);
#
        return 1;
#
    }
#
 
#
    img0 = cvLoadImage(argv[1], 1);
#
 
#
    cvNamedWindow("img", 1);
#
    cvSetMouseCallback("img", mouseHandler, NULL);
#
    cvShowImage("img", img0);
#
    cvWaitKey(0);
#
    cvDestroyWindow("img");
#
    cvReleaseImage(&img0);
#
    cvReleaseImage(&img1);
#
 
#
    return 0;
#
}
